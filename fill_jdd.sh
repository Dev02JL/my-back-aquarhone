#!/bin/bash

# Script pour remplir le jeu de donn√©es (JDD) avec des donn√©es de test
# Ce script doit √™tre ex√©cut√© avant les tests pour s'assurer que les donn√©es n√©cessaires existent

echo "üóÑÔ∏è  Remplissage du jeu de donn√©es (JDD)"
echo "========================================"

# 1. Cr√©ation des utilisateurs de test
echo -e "\n1Ô∏è‚É£  Cr√©ation des utilisateurs de test..."

# Cr√©er l'administrateur principal
php bin/console app:create-admin superadmin@aquarhone.com admin123

# Cr√©er des utilisateurs standards
php bin/console doctrine:query:sql "INSERT OR IGNORE INTO user (email, password, roles) VALUES 
('test@example.com', '\$2y\$13\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '[\"ROLE_USER\"]'),
('user@example.com', '\$2y\$13\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '[\"ROLE_USER\"]'),
('user2@example.com', '\$2y\$13\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '[\"ROLE_USER\"]'),
('admin@example.com', '\$2y\$13\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', '[\"ROLE_USER\"]')"

echo "‚úÖ Utilisateurs cr√©√©s"

# 2. Cr√©ation des activit√©s de test
echo -e "\n2Ô∏è‚É£  Cr√©ation des activit√©s de test..."

# Supprimer les activit√©s existantes pour √©viter les doublons
php bin/console doctrine:query:sql "DELETE FROM activity"

# Cr√©er les activit√©s de test avec cr√©neaux horaires
php bin/console doctrine:query:sql "INSERT INTO activity (name, description, activity_type, location, available_slots, price, remaining_spots, created_at, updated_at) VALUES 
('Kayak en mer', 'D√©couvrez la c√¥te en kayak de mer', 'kayak', 'Port de plaisance', '[\"2024-07-20 09:00:00\", \"2024-07-20 10:30:00\", \"2024-07-20 14:00:00\", \"2024-07-20 15:30:00\", \"2024-07-21 09:00:00\", \"2024-07-21 10:30:00\", \"2024-07-21 14:00:00\", \"2024-07-21 15:30:00\", \"2024-07-22 09:00:00\", \"2024-07-22 10:30:00\", \"2024-07-22 14:00:00\", \"2024-07-22 15:30:00\"]', 45.00, 8, datetime('now'), datetime('now')),
('Paddle en mer', 'Balade en paddle sur la M√©diterran√©e', 'paddle', 'Plage de la Corniche', '[\"2024-07-20 10:00:00\", \"2024-07-20 11:30:00\", \"2024-07-20 15:00:00\", \"2024-07-20 16:30:00\", \"2024-07-21 10:00:00\", \"2024-07-21 11:30:00\", \"2024-07-21 15:00:00\", \"2024-07-21 16:30:00\", \"2024-07-22 10:00:00\", \"2024-07-22 11:30:00\", \"2024-07-22 15:00:00\", \"2024-07-22 16:30:00\"]', 35.00, 6, datetime('now'), datetime('now')),
('Plong√©e sous-marine', 'Exploration des fonds marins', 'diving', 'Centre de plong√©e', '[\"2024-07-20 08:00:00\", \"2024-07-20 10:00:00\", \"2024-07-20 14:00:00\", \"2024-07-20 16:00:00\", \"2024-07-21 08:00:00\", \"2024-07-21 10:00:00\", \"2024-07-21 14:00:00\", \"2024-07-21 16:00:00\", \"2024-07-22 08:00:00\", \"2024-07-22 10:00:00\", \"2024-07-22 14:00:00\", \"2024-07-22 16:00:00\"]', 80.00, 4, datetime('now'), datetime('now')),
('Voile l√©g√®re', 'Initiation √† la voile sur optimist', 'sailing', 'Club nautique', '[\"2024-07-20 09:30:00\", \"2024-07-20 11:00:00\", \"2024-07-20 14:30:00\", \"2024-07-20 16:00:00\", \"2024-07-21 09:30:00\", \"2024-07-21 11:00:00\", \"2024-07-21 14:30:00\", \"2024-07-21 16:00:00\", \"2024-07-22 09:30:00\", \"2024-07-22 11:00:00\", \"2024-07-22 14:30:00\", \"2024-07-22 16:00:00\"]', 60.00, 10, datetime('now'), datetime('now')),
('Jet ski', 'Sensation forte en jet ski', 'jetski', 'Base nautique', '[\"2024-07-20 10:00:00\", \"2024-07-20 11:30:00\", \"2024-07-20 15:00:00\", \"2024-07-20 16:30:00\", \"2024-07-21 10:00:00\", \"2024-07-21 11:30:00\", \"2024-07-21 15:00:00\", \"2024-07-21 16:30:00\", \"2024-07-22 10:00:00\", \"2024-07-22 11:30:00\", \"2024-07-22 15:00:00\", \"2024-07-22 16:30:00\"]', 120.00, 2, datetime('now'), datetime('now'))"

echo "‚úÖ Activit√©s cr√©√©es"

# 3. Cr√©ation de quelques r√©servations de test
echo -e "\n3Ô∏è‚É£  Cr√©ation de r√©servations de test..."

# Supprimer les r√©servations existantes
php bin/console doctrine:query:sql "DELETE FROM reservation"

# Cr√©er quelques r√©servations de test
php bin/console doctrine:query:sql "INSERT INTO reservation (user_id, activity_id, date_time, status, created_at, updated_at) VALUES 
(2, 1, datetime('now', '+1 day'), 'confirmed', datetime('now'), datetime('now')),
(3, 2, datetime('now', '+2 days'), 'confirmed', datetime('now'), datetime('now')),
(4, 3, datetime('now', '+3 days'), 'pending', datetime('now'), datetime('now'))"

echo "‚úÖ R√©servations cr√©√©es"

# 4. V√©rification des donn√©es
echo -e "\n4Ô∏è‚É£  V√©rification des donn√©es cr√©√©es..."

echo "üìä Statistiques du JDD :"
echo "========================"

# Compter les utilisateurs
USER_COUNT=$(php bin/console doctrine:query:sql "SELECT COUNT(*) as count FROM user" | tail -1 | tr -d ' ')
echo "üë• Utilisateurs : $USER_COUNT"

# Compter les activit√©s
ACTIVITY_COUNT=$(php bin/console doctrine:query:sql "SELECT COUNT(*) as count FROM activity" | tail -1 | tr -d ' ')
echo "üèÑ Activit√©s : $ACTIVITY_COUNT"

# Compter les r√©servations
RESERVATION_COUNT=$(php bin/console doctrine:query:sql "SELECT COUNT(*) as count FROM reservation" | tail -1 | tr -d ' ')
echo "üìÖ R√©servations : $RESERVATION_COUNT"

echo -e "\nüìã Liste des utilisateurs :"
php bin/console doctrine:query:sql "SELECT email, roles FROM user"

echo -e "\nüìã Liste des activit√©s :"
php bin/console doctrine:query:sql "SELECT name, activity_type, location, price FROM activity"

echo -e "\nüéâ JDD rempli avec succ√®s !"
echo "Les tests peuvent maintenant √™tre ex√©cut√©s." 